@model TreasureCache.Presentation.ViewModels.Products.ViewViewModel

<div class="flex flex-col gap-2 text-gray-50 mx-4">
    <div class="dark:bg-gray-800 border border-gray-800 rounded-lg p-4">
        <div class="lg:w-[1000px] lg:h-[400px]">
            <img src="~/@Model.ProductDto.ProductFiles.LargeImagePath" class="w-full h-full"/>
        </div>
    </div>
    <div class="grid md:grid-cols-3 gap-2">
        <div class="col-span-2 dark:bg-gray-800 border border-gray-800 rounded-lg p-4">
            <div >
                <h4 class="text-2xl font-semibold tracking-tight">@Model.ProductDto.Name</h4>
                <h2 class="text-xl font-semibold tracking-tight mt-10">Description</h2>
                <p class="text-md  tracking-tight mt-2">@Model.ProductDto.Description</p>
            </div>
        </div>
        <div class="flex flex-col gap-2 dark:bg-gray-800 border border-gray-800 rounded-lg p-4 col-span-2 md:col-span-1">
            <div>
                @if (Model.ProductDto.Discount > 0)
                {
                    <span class="text-sm block line-through">@Model.ProductDto.BasePrice</span>
                    <span class="text-2xl block font-semibold">@Model.DiscountPrice</span>
                }
                else
                {
                    <span class="text-2xl block font-semibold">@Model.ProductDto.BasePrice</span>
                }
            </div>
            <div class="relative flex items-center md:max-w-[12rem] ">
                <button type="button" id="decrement-button" data-input-counter-decrement="quantity-input" class="bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:border-gray-600 hover:bg-gray-200 border border-gray-300 rounded-s-lg p-3 h-11 focus:ring-gray-100 dark:focus:ring-gray-700 focus:ring-2 focus:outline-none">
                    <svg class="w-3 h-3 text-gray-900 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 2">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h16"/>
                    </svg>
                </button>
                <input asp-for="Quantity" id="quantity-input" aria-describedby="helper-text-explanation" class="bg-gray-50 border-x-0 border-gray-300 h-11 text-center text-gray-900 text-sm focus:ring-blue-500 focus:border-blue-500 block w-full py-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="1" value="@Model.Quantity" required>
                <button type="button" id="increment-button" class=" bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:border-gray-600 hover:bg-gray-200 border border-gray-300 rounded-e-lg p-3 h-11 focus:ring-gray-100 dark:focus:ring-gray-700 focus:ring-2 focus:outline-none">
                    <svg class="w-3 h-3 text-gray-900 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 18">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 1v16M1 9h16"/>
                    </svg>
                </button>
            </div>
            <a id="buy-button" asp-controller="Payment" asp-action="CheckOut" asp-route-productId="@Model.ProductDto.Id" asp-route-quantity="@Model.Quantity" class="text-white bg-gradient-to-r from-green-400 via-green-500 to-green-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-green-300 dark:focus:ring-green-800 shadow-lg shadow-green-500/50 dark:shadow-lg dark:shadow-green-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center ">Buy</a>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
    $(document).ready(function() {
        $('#quantity-input').on('change', function() {
            const productId = '@Model.ProductDto.Id'; // Get the product ID from the model
            const newQuantity = $(this).val(); // Get the updated quantity value
            console.log(newQuantity)
    
            // Update the href attribute with the new quantity
            $('#buy-button').attr('href', `/Payment/CheckOut?productId=${productId}&quantity=${newQuantity}`);
        });
    });
    </script>
    <script>
        $(document).ready(() => {
            const buyButton = $('#buy-button');
            const decrementButton = $('#decrement-button');
            const incrementButton = $('#increment-button');
            const quantityInput = $('#quantity-input');
            const productId = '@Model.ProductDto.Id'; // Get the product ID from the model
            
            const updateValue = () => 
            {
                const newQuantity = quantityInput.val();
                buyButton.attr('href', `/Payment/CheckOut?productId=${productId}&quantity=${newQuantity}`);
            }
            
            decrementButton.click(() => {
                let value = parseInt(quantityInput.val(), 10);
                if (value > 1) {
                    value--;
                    quantityInput.val(value);
                    updateValue();
                }
            });
    
            incrementButton.click(() => {
                let value = parseInt(quantityInput.val(), 10);
                if (value < 50) {
                    value++;
                    quantityInput.val(value);
                    updateValue();
                }
            });
        });
    </script>
}